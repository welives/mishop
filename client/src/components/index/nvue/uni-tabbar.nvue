<template>
  <view class="border-bottom border-light-secondary" style="width: 750rpx;">
    <scroller class="scroller" :show-scrollbar="false" scroll-direction="horizontal">
      <view
        class="scroller-item"
        v-for="(tab, index) in tabBars"
        :key="index"
        :ref="'tab_' + index"
        @click.stop="tabChange(index)"
      >
        <text
          class="tab-text"
          :class="tabIndex === index ? 'text-main border-main font-weight-bold' : 'text-muted border-bottom-0'"
          >{{ tab.name }}</text
        >
      </view>
    </scroller>
  </view>
</template>

<script>
const dom = weex.requireModule('dom')
export default {
  props: {
    tabIndex: {
      type: Number,
      default: 0,
    },
    tabBars: {
      type: Array,
      default: [],
    },
  },
  data() {
    return {
      windowWidth: 0,
    }
  },
  created() {
    const res = uni.getSystemInfoSync()
    this.windowWidth = res.windowWidth
  },
  watch: {
    tabIndex(newValue) {
      this.tabChange(newValue)
    },
  },
  methods: {
    // 切换选项卡
    async tabChange(index) {
      // 通知父组件修改index
      this.$emit('change', index)
      // 拿到当前元素
      let el = this.$refs[`tab_${index}`][0]
      // 监听滚动
      dom.getComponentRect(el, (res) => {
        // 处于可视区域右侧
        if (res.size.right > this.windowWidth) {
          let target = this.$refs[`tab_${index - 5}`][0]
          dom.scrollToElement(target, {})
        }
        // 处于可视区域左侧
        else if (res.size.left < 0) {
          dom.scrollToElement(el, {})
        }
      })
    },
  },
}
</script>

<style scoped>
.scroller {
  flex-direction: row;
  width: 750rpx;
  height: 80rpx;
}
.scroller-item {
  width: 125rpx;
  height: 80rpx;
  align-items: center;
  justify-content: center;
}
.tab-text {
  height: 80rpx;
  line-height: 80rpx;
  font-size: 35rpx;
  border-bottom-width: 6rpx;
  border-bottom-style: solid;
}
</style>
